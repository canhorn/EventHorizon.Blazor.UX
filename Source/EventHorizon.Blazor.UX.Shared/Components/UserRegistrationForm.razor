@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Extensions.Logging

<h3>Example User Registration Form</h3>

<EditForm Model="this" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @* Text Field Examples *@
    <TextField @bind-Value="UserName"
               LabelDisplay="User Name" />

    <Animate>
        <TextField @bind-Value="AnimatedUserName"
                   LabelDisplay="Animated User Name" />
    </Animate>

    <TextField @bind-Value="DisabledFirstName"
               disabled="true"
               LabelDisplay="First Name" />

    <Animate>
        <TextField @bind-Value="AnimatedDisabledFirstName"
                   disabled="true"
                   LabelDisplay="Animated Disabled First Name" />
    </Animate>

    @* Text Area Examples *@
    <TextArea @bind-Value="About"
              LabelDisplay="About" />

    <Animate>
        <TextArea @bind-Value="AnimatedAbout"
                  LabelDisplay="Animated About" />
    </Animate>

    <TextArea @bind-Value="DisabledAbout"
              disabled="true"
              rows="1"
              LabelDisplay="About" />

    <Animate>
        <TextArea @bind-Value="AnimatedDisabledAbout"
                  disabled="true"
                  rows="1"
                  LabelDisplay="Animated Disabled About" />
    </Animate>

    @* Select Box Examples *@
    <SelectBox Options="LocationOptions"
               LabelDisplay="Location"
               @bind-Value="SelectedLocationOption" />

    <SelectBox Options="LocationOptions"
               LabelDisplay="Disabled Location"
               @bind-Value="SelectedLocationOption"
               disabled="true" />

    <Button type="submit">Submit</Button>
    @foreach (var message in Messages)
    {
        <div>@message</div>
    }
</EditForm>

@code {
    [System.ComponentModel.DataAnnotations.Required]
    public string UserName { get; set; }
    [System.ComponentModel.DataAnnotations.Required]
    public string AnimatedUserName { get; set; }
    public string DisabledFirstName { get; set; } = "I am Disabled";
    public string AnimatedDisabledFirstName { get; set; } = "I am Disabled";

    [System.ComponentModel.DataAnnotations.Required]
    public string About { get; set; }
    [System.ComponentModel.DataAnnotations.Required]
    public string AnimatedAbout { get; set; }
    public string DisabledAbout { get; set; } = "I am Disabled - About";
    public string AnimatedDisabledAbout { get; set; } = "I am Disabled - About";

    public IList<SelectBoxOption> LocationOptions { get; set; } = new List<SelectBoxOption>
    {
        new SelectBoxOption
        {
            Value = string.Empty,
            Text = "Select a Location...",
        },
        new SelectBoxOption
        {
            Value = "here",
            Text = "Here",
        },
        new SelectBoxOption
        {
            Value = "there",
            Text = "There",
        },
        new SelectBoxOption
        {
            Value = "everywhere",
            Text = "Everywhere",
        },
        new SelectBoxOption
        {
            Value = "no_where",
            Text = "No Where",
        },
    };
    [System.ComponentModel.DataAnnotations.Required]
    public SelectBoxOption SelectedLocationOption { get; set; } = new SelectBoxOption();


    public IList<string> Messages { get; set; } = new List<string>();

    [Inject]
    ILogger<UserRegistrationForm> Logger { get; set; }

    private void HandleValidSubmit()
    {
        Messages = new List<string>
        {
            "Submitted Form:",
            $"|  UserName = {UserName}",
            $"|  AnimatedUserName = {AnimatedUserName}",
        };
        Messages.Add("|  About = ");
        var aboutSplit = About.Split("\n");
        foreach (var aboutSplitItem in aboutSplit)
        {
            Messages.Add($"|  > {aboutSplitItem}");
        }
        Messages.Add("|  AnimatedAbout = ");
        var animatedAboutSplit = AnimatedAbout.Split("\n");
        foreach (var animatedAboutSplitItem in animatedAboutSplit)
        {
            Messages.Add($"|  > {animatedAboutSplitItem}");
        }

        Messages.Add(
            $"|  SelectedLocation = [({SelectedLocationOption.Value}) {SelectedLocationOption.Text}]"
        );
    }
}
